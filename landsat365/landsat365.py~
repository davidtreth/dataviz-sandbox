import os
import numpy
from bs4 import BeautifulSoup
from PIL import Image, ImageDraw, ImageFont, ImageFile
ImageFile.LOAD_TRUNCATED_IMAGES = True


def createCaption(rawimage, descript, fontsize, left=False):
	# get a font
	fnt = ImageFont.truetype('arial.ttf', size=fontsize)
	desclength = len(descript)
	boxwidth = int(desclength * fontsize / 1.8 + fontsize*0.75)
	xs, ys = rawimage.size
	if left:
		box = (0,0,boxwidth,ys/12)
	else:
		box = (xs-boxwidth,0,xs,ys/12)
	region = rawimage.crop(box)
	r,g,b,a = region.split()
	meanregion = numpy.mean([numpy.mean(r), numpy.mean(g), numpy.mean(b)])
	print(meanregion)
	
	opac=255
	if meanregion < 100:
		txtcolour = (0,0,0,0)
		txtcolour2 = (255,255,255,opac)
	else:
		txtcolour = (255,255,255,0)	
		txtcolour2 = (0,0,0,opac)	
	txt = Image.new('RGBA', rawimage.size, txtcolour)
	# get a drawing context
	d = ImageDraw.Draw(txt)		
	# draw text, half opacity
	if left:
		d.text((fontsize*0.7,fontsize*0.7), descript, font=fnt, fill=txtcolour2)
	else:	
		d.text((xs-boxwidth,fontsize*0.7), descript, font=fnt, fill=txtcolour2)
	out = Image.alpha_composite(rawimage, txt)	
	return out
	
picDir = "C:\\Users\\Davydh\\Pictures\\Landsat365"
indexfile = "Landsat365 Retina Wallpapers.html"
outdir = "output"
outdir = os.path.join(picDir,outdir)
subdir = "1440px"
subdir2 = "preview"
os.chdir(picDir)



raw = open(indexfile,'r').read()
soup = BeautifulSoup(raw,"lxml")

#print(soup.prettify())

listpics = soup.find_all("ul")
print(len(listpics))
listpics2 = listpics[0].find_all("li")
print(len(listpics2))

#fullsize = True
fullsize = False
for p in listpics2:
	descript = p.a['data-description']
	prevfilename = p.a.img['src']
	print(descript)
	desclength = len(descript)
	if fullsize:	
		mainfilename = os.path.split(prevfilename)[1]
		try:
			im = Image.open(mainfilename).convert('RGBA')
		except IOError:
			print("IOError encountered")
			
		out = createCaption(im, descript, 60)
		print(prevfilename, mainfilename)
		# resize to 1440px
		xs, ys = im.size
		ys2 = 1440
		xs2 = int((ys2/ys) * xs)
		im2 = im.resize((xs2, ys2))
		out2 = createCaption(im2, descript, 48)
		
		#out.show()
		# jpg problem  - don't do conversion for now
		#outfile = mainfilename.replace(".png", ".jpg")
		#outfile = os.path.join(outdir, outfile)
		outfile = os.path.join(outdir, mainfilename)
		outfile2 = os.path.join(outdir, subdir,mainfilename)

		print(outfile)
		if mainfilename != outfile:
			try:
				out.save(outfile)
				out2.save(outfile2)
			except IOError:
				print("cannot convert", mainfilename)
	else:
		outfilename = os.path.split(prevfilename)[1]
		try:
			im = Image.open(prevfilename).convert('RGBA')
		except IOError:
			print("IOError encountered")
		descript = descript.replace(",",",\n")
		out = createCaption(im, descript, 16, left=True)		
		print(prevfilename)
		outfile = os.path.join(outdir, subdir2, outfilename)
		if prevfilename != outfile:
			try:
				out.save(outfile)				
			except IOError:
				print("cannot convert", prevfilename)		
	#im.show()
	
	

